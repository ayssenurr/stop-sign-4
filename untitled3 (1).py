# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z6Er2gRWCYKhXzTXpuoRBTFUN_9aoryH
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/ultralytics/yolov5
# %cd yolov5
# %pip install -r requirements.txt

from google.colab import files
uploaded = files.upload()
import zipfile
import os

zip_path = "Mini-Project.v1i.yolov5pytorch.zip"

extract_path = "/content/dataset"

with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    zip_ref.extractall(extract_path)


os.listdir(extract_path)

# @title
!python train.py \
  --img 640 \
  --batch 16 \
  --epochs 20 \
  --data /content/dataset/data.yaml \
  --weights yolov5s.pt \
  --name stop_sign_model

!cat /content/dataset/data.yaml

yaml_path = "/content/dataset/data.yaml"

new_lines = []
with open(yaml_path, 'r') as f:
    for line in f:
        if line.strip().startswith('train:'):
            new_lines.append("train: /content/dataset/train/images\n")
        elif line.strip().startswith('val:'):
            new_lines.append("val: /content/dataset/valid/images\n")
        elif line.strip().startswith('test:'):
            new_lines.append("test: /content/dataset/test/images\n")
        else:
            new_lines.append(line)

with open(yaml_path, 'w') as f:
    f.writelines(new_lines)

!cat /content/dataset/data.yaml

!python train.py \
  --img 640 \
  --batch 16 \
  --epochs 20 \
  --data /content/dataset/data.yaml \
  --weights yolov5s.pt \
  --name stop_sign_model

from google.colab import files
uploaded = files.upload()

import zipfile
import os

zip_path = "stop_sign_dataset.zip"
extract_path = "/content/stop_sign_dataset"

with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    zip_ref.extractall(extract_path)

os.listdir(extract_path)

import os

base_path = "/content/stop_sign_dataset"

for root, dirs, files in os.walk(base_path):
    print(f"\nüìÅ {root}")
    for file in files:
        print(f"   ‚îî‚îÄ‚îÄ {file}")

!python detect.py \
  --weights runs/train/stop_sign_model/weights/best.pt \
  --source /content/dataset/test/images \
  --conf 0.25 \
  --img 640 \
  --save-txt \
  --save-conf \
  --name stop_sign_test_output

import os
from IPython.display import Image, display

output_dir = '/content/runs/detect/stop_sign_test_output'
for img_file in os.listdir(output_dir):
    if img_file.endswith('.jpg'):
        display(Image(filename=os.path.join(output_dir, img_file)))